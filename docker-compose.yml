version: '3.7'

services:
  backend:
    build: .
    container_name: node_backend
    volumes:
      - ./src:/usr/src/app/src
    command: npm run start:dev
    ports:
     - "${PORT}:${PORT}"
    env_file:
      - ./.env
    environment:
      - MIN_MOVIE_COUNT=${MIN_MOVIE_COUNT}
      - MAX_MOVIE_COUNT=${MAX_MOVIE_COUNT}
    networks:
      - movie_app_backend
    
  mysql:
    container_name: ${MYSQL_HOST}
    restart: always
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    networks:
      - movie_app_backend

  redis:
    container_name: ${REDIS_HOST}
    image: redis:latest
    env_file: .env
    logging:
      driver: 'none'
    command: 'redis-server --requirepass ${REDIS_PASSWORD} --notify-keyspace-events Ex --appendonly yes'
    ports:
      - ${REDIS_PORT}:${REDIS_PORT} 
    volumes:
      - redis-data:/data
    networks:
      - movie_app_backend

volumes:
  redis-data:

networks:
  movie_app_backend:
    name: movie_app_backend
    driver: bridge
